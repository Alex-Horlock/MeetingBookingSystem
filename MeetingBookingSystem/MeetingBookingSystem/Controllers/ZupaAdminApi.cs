/*
 * Seat Booking API
 *
 * zupaTech Seat Booking System
 *
 * OpenAPI spec version: 1.0.0
 * Contact: alexhorlock93@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using AlexHorlock.BookingSystem.Attributes;
using AlexHorlock.BookingSystem.Models;
using AlexHorlock.BookingSystem.Data;
namespace AlexHorlock.BookingSystem.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class ZupaAdminApiController : Controller
    { 
        private readonly MeetingDbContext _context;
        public ZupaAdminApiController(MeetingDbContext context)
        {
            _context = context;
        }

        /// <summary>
        /// creates a meeting
        /// </summary>
        /// <remarks>Create a Meeting</remarks>
        /// <param name="meeting">Meeting to add</param>
        /// <response code="201">meeting created</response>
        /// <response code="400">invalid input, request invalid</response>
        /// <response code="409">a meeting already exists with that id</response>
        [HttpPost]
        [Route("/Alex-Horlock/SeatBooking/1.0.0/meetings")]
        [ValidateModelState]
        [SwaggerOperation("CreateMeeting")]
        public virtual IActionResult CreateMeeting([FromBody]Meeting meeting)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);

            if (meeting.Id == null)
                meeting.Id = Guid.NewGuid();

            _context.Meetings.Add(meeting);

            _context.SaveChangesAsync();

            return Ok(); // is this right?
        }
    }
}
